@page "/cafedra/create"
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Net.Http
@using System.Net.Http.Json
@using Front.Components.Model
@using Microsoft.AspNetCore.Antiforgery;
@inject HttpClient Http
@inject IConfiguration Config
@inject IHttpClientFactory ClientFactory
@attribute [RequireAntiforgeryToken]

<h1>Create cafedra</h1>

<form method="post" @onsubmit="Submit" @formname="createCafedraForm">
    <label class="col-form-label">
        Name: 
        <InputText @bind-Value="name"/>
    </label> <br />
    <label class="col-form-label">
        Description: 
        <InputText @bind-Value="description"/>
    </label>
    <button type="submit">Submit</button>
    <AntiforgeryToken />
</form>

@*  <EditForm OnSubmit="Submit" Model="cafedra" FormName="createCafedraForm">
    <label>
        Name:
        <InputText @bind-Value="cafedra.name" />
    </label>
    <label>
        Description:
        <InputText @bind-Value="cafedra.description" />
    </label>
    <button type="submit">Submit</button>
</EditForm> *@

<p>@m</p> 
@code {
    [SupplyParameterFromForm]
    private string? name { get; set; }
    [SupplyParameterFromForm]
    private string? description { get; set; }
    string? m;
    private string? serviceEndpoint;

    protected override async Task OnInitializedAsync()
    {
        serviceEndpoint = $"{Config.GetValue<string>("BackendUrl")}/";
    }

    private async Task Submit ()
    {
        // if (!string.IsNullOrEmpty(name) && !string.IsNullOrEmpty(description))
        // {
        m = name + " - " + description;
        Console.WriteLine(m);
        var response = await Http.PostAsJsonAsync("https://localhost:7264/api/cafedra/", new {name = name, description = description});
        
        // }
    }

}
