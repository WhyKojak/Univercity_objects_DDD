@page "/cafedra/update/{cafedrastr}"
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Net.Http
@using System.Net.Http.Json
@using Front.Components.Model
@using Microsoft.AspNetCore.Antiforgery;
@inject HttpClient Http
@inject IConfiguration Config
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@attribute [RequireAntiforgeryToken]
@attribute [StreamRendering]

<h1>Обновление кафедры</h1>

<form method="post" @onsubmit="Submit" @formname="updateCafedraForm">
    <table class="table align-content-center">
        <tr>
            <td>
                <label class="col-form-label">
                    Название: 
                </label>
            </td>
            <td>
                <InputText class="input-group-text" @bind-Value="name" />
            </td>
        </tr>
        <tr>
            <td>
                <label class="col-form-label">
                    Описание: 
                </label> 
            </td>
            <td>
                <InputText class="input-group-text" @bind-Value="description" />
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <button class="btn btn-light " type="submit">Применить изменения</button>
            </td>
        </tr>
        <AntiforgeryToken />
    </table>
</form>

@code {
    [SupplyParameterFromForm]
    private string? name { get; set; }
    [SupplyParameterFromForm]
    private string? description { get; set; }

    private Guid cafedraguid { get; set; }

    [Parameter]
    public string cafedrastr { get; set; }

    private Model.Cafedra? cafedra { get; set; }

    private string? serviceEndpoint;
    protected override async Task OnInitializedAsync()
    {
        serviceEndpoint = $"{Config.GetValue<string>("BackendUrl")}/";
        if (cafedra is null)
        {
            cafedraguid = Guid.Parse(cafedrastr);
            // GetById
            cafedra = await Http.GetFromJsonAsync<Model.Cafedra>("https://localhost:7264/api/cafedra/" + cafedrastr);

            name = cafedra.name;
            description = cafedra.description;
        }
    }

    private async Task Submit ()
    {
        var response = await Http.PutAsJsonAsync("https://localhost:7264/api/cafedra/", new {guid = cafedraguid, name = name, description = description});
        
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/cafedra");
        }
    }

}
